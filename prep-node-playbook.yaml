#
##
## !!! IMPORTANT !!!
## 
## NOTE: Ensure registration is done prior to running
## 
## Preparation steps:
## 
## Register machine with RH:
## ansible -i hosts OSEv3 -a 'subscription-manager register --username="username" --password="password"'
##
## Obtain the pool ID for Openshift:
## ansible -i hosts OSEv3 -a 'subscription-manager list --available --matches="*Openshift*"'
##
## Variables sourced from inventory file:
## -- openshift_release (we use a substring to convert v3.6 to 3.6 for example)
## -- openshift_pool (subscription pool hash for openshift)
## 
## !!!!!!!!!!!!!!!!!
##
## prep-node-playbook.yaml: Quick playbook to prepare hosts for openshift-ansible deploy.
## 
## - Fills in docker volume group to create docker-storage-setup file with proper values. (defaults: docker-vg)
## - Install and enable NetworkManager package
## - Ensure SELinux is enabled
## - Optionally reboot at end (required to enable SELinux)
##
## Takes OSEv3 inventory as input host file:
##     ansible-playbook -i hosts prep-node.yaml --limit 'node1.myenv.internal' -e 'pool=POOLID-FROM-COMMAND-ABOVE reboot_host=true'
##
## Optionally reboot server:
##     ansible-playbook -i hosts prep-node.yaml --limit 'node1.myenv.internal'  -e 'pool=POOLID-FROM-COMMAND-ABOVE reboot_host=true'
##
##
#

- hosts: all:!local
  gather_facts: yes
  vars:
     docker_device: 'sde'

  tasks:

  - name: Verify docker-vg volume group exists
    shell: "vgs {{ docker_vg }} --noheadings|awk '{print $1}'|tr -d '\n'"
    register: cmd_docker_vg

  - name: Remove any subscriptions attached to RHSM by default
    command: "subscription-manager remove --all"

  - name: Attach nodes to the appropriate pool-id
    shell: subscription-manager attach --pool={{ openshift_pool }}

  - name: ensure firewalld is stopped, disabled, and masked
    systemd:
      name: firewalld
      state: stopped
      enabled: no
      masked: yes

  - name: Disable all repos
    shell: subscription-manager repos --disable="*"

  - name: Enable only required repos for all nodes
    shell: subscription-manager repos --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-ose-{{ openshift_release[1:4] }}-rpms" --enable="rhel-7-fast-datapath-rpms"

  - name: install prerequisite yum packages
    yum:
      name: "{{ item }}"
      state: latest 
    with_items:
      - wget
      - git
      - net-tools
      - bind-utils
      - iptables-services
      - bridge-utils
      - bash-completion 
      - kexec-tools 
      - sos 
      - psacct

  - name: ensure selinux is installed and enforcing
    selinux:
      state: enforcing
      policy: targeted

  - name: Install Openshift Utilities
    yum: 
      name: atomic-openshift-utils
      state: latest

  - name: Install correct docker version
    yum: 
      name: "docker-1.12.6"
      state: present

  - name: Set up docker-storage-setup file
    shell: echo -e 'DEVS=/dev/{{ docker_device }}\nVG=docker-vg\nDATA_SIZE=90%VG' > /etc/sysconfig/docker-storage-setup

  - name: run docker storage setup to initialize storage
    shell: docker-storage-setup

  - name: Enable and start docker
    service: 
      name: docker 
      state: started 
      enabled: yes

  - name: Install NetworkManager
    yum: 
      name: "NetworkManager" 
      state: latest

  - name: Configure NetworkManager
    lineinfile:
      dest: "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4['interface'] }}"
      regexp: '^{{ item }}='
      line: '{{ item }}=yes'
      state: present
      create: yes
    with_items:
    - 'USE_PEERDNS'
    - 'NM_CONTROLLED'

  - name: Enable NetworkManager
    service: 
      name: "NetworkManager" 
      enabled: yes

  - name: Restart to enable selinux and other changes
    command: /sbin/shutdown -r +1
    async: 0
    poll: 0
    ignore_errors: true
    when: reboot_host|default(false) == 'true'
