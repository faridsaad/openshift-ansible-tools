---
- hosts: all:!ansible
  vars:
    docker_device: nvme2n1
  tasks:
  - name: Install docker
    yum:
      name: docker
      state: present

  - name: docker-storage-setup (remove overlay2)
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      regexp: overlay2
      state: absent
    tags:
      - storage-setup

  - name: docker-storage-setup (add DEV=vdb)
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      regexp: DEVS
      line: DEVS={{ docker_device }}
    tags:
      - storage-setup

  - name: docker-storage-setup (add VG=dockervg)
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      regexp: VG=
      line: VG=dockervg
    tags:
      - storage-setup

  - name: docker-storage-setup (add WIPE_SIGNATURES=true)
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      regexp: WIPE_SIGNATURES
      line: WIPE_SIGNATURES=true
    tags:
      - storage-setup

- hosts: masters
  vars:
    etcd_device: /dev/nvme1n1
  gather_facts: no
  become: yes
  tasks:

  - name: Install lvm2
    yum:
      name: lvm2
      state: present

  - name: Create PV on "{{ etcd_device }}"
    command: pvcreate -ff -y "{{ etcd_device }}"
    ignore_errors: yes

  - name: Create VG etcd-vg
    command: vgcreate etcd-vg "{{ etcd_device }}"
    ignore_errors: yes

  - name: Create LV etcd-lv
    command: lvcreate -n etcd-lv -l 100%VG etcd-vg
    ignore_errors: yes

  - name: Mkfs xfs on etcd-lv
    command: mkfs.xfs /dev/mapper/etcd--vg-etcd--lv
    ignore_errors: yes

  - name: Make /var/lib/etcd
    file:
      path: /var/lib/etcd
      state: directory

  - name: Update fstab
    lineinfile:
      path: /etc/fstab
      regexp: etcd
      line: '/dev/mapper/etcd--vg-etcd--lv /var/lib/etcd xfs defaults 0 0'

  - name: Mount filesystem
    shell: 'mount -a'

- hosts: all:!masters:!ansible
  vars:
    origin_device: /dev/nvme1n1
  gather_facts: no
  become: yes
  tasks:

  - name: Install lvm2
    yum:
      name: lvm2
      state: present

  - name: Create PV on "{{ origin_device }}"
    command: pvcreate -ff -y "{{ origin_device }}"
    ignore_errors: yes

  - name: Create VG origin-vg
    command: vgcreate origin-vg "{{ origin_device }}"
    ignore_errors: yes

  - name: Create LV origin-lv
    command: lvcreate -n origin-lv -l 100%VG origin-vg
    ignore_errors: yes

  - name: Mkfs xfs on origin-lv
    command: mkfs.xfs /dev/mapper/origin--vg-origin--lv
    ignore_errors: yes

  - name: Make /var/lib/origin
    file:
      path: /var/lib/origin
      state: directory

  - name: Update fstab
    lineinfile:
      path: /etc/fstab
      regexp: origin
      line: '/dev/mapper/origin--vg-origin--lv /var/lib/origin xfs defaults 0 0'

  - name: Mount filesystem
    shell: 'mount -a'

- hosts: all:!ansible
  gather_facts: no
  become: yes
  tasks:

  - name: Make sure docker is stopped
    command: "systemctl stop docker"
    ignore_errors: true

  - name: Make sure docker storage is stopped
    command: "systemctl stop docker-storage-setup"
    ignore_errors: true

  - name: Stop docker mount
    systemd:
      name: var-lib-docker-containers.mount
      state: stopped
    ignore_errors: true

  - name: Remove /etc/sysconfig/docker-storage
    file:
      path: /etc/sysconfig/docker-storage
      state: absent

  - name: Remove /var/lib/docker
    file:
      path: /var/lib/docker
      state: absent

  - name: Remove the logical volume.
    lvol:
      vg: dockervg
      lv: docker-pool
      state: absent
      force: yes

  - name: Run container-storage-setup
    command: "container-storage-setup"

  - name: Start and enable docker
    systemd:
      name: docker.service
      state: started
      enabled: yes
